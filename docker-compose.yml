version: '3.8'

services:
  # PostgreSQL Database (optional - you can use your existing Supabase)
  # db:
  #   image: postgres:15-alpine
  #   restart: unless-stopped
  #   environment:
  #     POSTGRES_DB: ${DB_NAME:-toeai}
  #     POSTGRES_USER: ${DB_USER:-toeai}
  #     POSTGRES_PASSWORD: ${DB_PASSWORD}
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   ports:
  #     - "5432:5432"
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-toeai}"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      # App Configuration
      APP_NAME: "TOE AI Backend"
      VERSION: "1.0.0"
      ENVIRONMENT: "production"
      DEBUG: "False"
      
      # Server Configuration
      HOST: "0.0.0.0"
      PORT: "8000"
      
      # Security
      SECRET_KEY: ${SECRET_KEY}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${ACCESS_TOKEN_EXPIRE_MINUTES:-30}
      REFRESH_TOKEN_EXPIRE_DAYS: ${REFRESH_TOKEN_EXPIRE_DAYS:-7}
      
      # CORS
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS}
      
      # Supabase Configuration
      SUPABASE_URL: ${SUPABASE_URL}
      SUPABASE_ANON_KEY: ${SUPABASE_ANON_KEY}
      SUPABASE_SERVICE_KEY: ${SUPABASE_SERVICE_KEY}
      
      # OpenAI Configuration
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      OPENAI_MODEL: ${OPENAI_MODEL:-gpt-3.5-turbo}
      OPENAI_MAX_TOKENS: ${OPENAI_MAX_TOKENS:-2000}
      OPENAI_TEMPERATURE: ${OPENAI_TEMPERATURE:-0.7}
      
      # Whisper Configuration
      WHISPER_MODEL: ${WHISPER_MODEL:-whisper-1}
      
      # Stripe Configuration
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
      STRIPE_PUBLISHABLE_KEY: ${STRIPE_PUBLISHABLE_KEY}
      STRIPE_WEBHOOK_SECRET: ${STRIPE_WEBHOOK_SECRET}
      STRIPE_PREMIUM_PRICE_ID: ${STRIPE_PREMIUM_PRICE_ID}
      
      # Usage Limits
      FREE_NORMAL_CHAT_LIMIT: ${FREE_NORMAL_CHAT_LIMIT:-10}
      FREE_INTERVIEW_CHAT_LIMIT: ${FREE_INTERVIEW_CHAT_LIMIT:-5}
      PREMIUM_NORMAL_CHAT_LIMIT: ${PREMIUM_NORMAL_CHAT_LIMIT:-999999}
      PREMIUM_INTERVIEW_CHAT_LIMIT: ${PREMIUM_INTERVIEW_CHAT_LIMIT:-999999}
    volumes:
      - backend_uploads:/app/static/uploads
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/docs"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    # depends_on:
    #   - db

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    environment:
      - VITE_API_URL=${VITE_API_URL:-http://localhost:8000}
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      - backend

  # Redis (optional - for caching and sessions)
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  # postgres_data:
  backend_uploads:
  redis_data:

networks:
  default:
    name: toeai_network